#!/bin/bash

# Print message colors
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly NC='\033[0m' # No Color

readonly DATA_DIR="/app/data"
readonly READY_FILE="$DATA_DIR/tmp/srdb_replace.txt"

# clear the ready file
if [ -f "$READY_FILE" ]; then
  rm $READY_FILE
fi

# Loop until the specified file is found, indicating the previous job is done
while [ ! -f $DATA_DIR/tmp/tunnel_step_ready.txt ]; do
  echo "[+] Waiting for tunnel job..."
  sleep 5
done

# variables
readonly SRDB_TAR_FILE="$DATA_DIR/lib/srdb-script.tar"
readonly SRDB_EXTRACT_DIR="$DATA_DIR/lib/files"
readonly SRDB_CLI_FILE="$SRDB_EXTRACT_DIR/srdb.cli.php"
readonly SRDB_DATABASE=$MYSQL_DOCKER_DATABASE
readonly SRDB_USER=$MYSQL_DOCKER_ROOT_USER
readonly SRDB_PASSWORD=$MYSQL_DOCKER_ROOT_PASSWORD
readonly SRDB_SEARCH=$WORDPRESS_LOCAL_URL

# Function to extract the local fallback srdb tar file
extract_srdb_script() {
  local TARBALL_FILE=$1
  if [ ! -f "$TARBALL_FILE" ]; then
    echo -e "${RED}[x]${NC} Error: Unable to find $TARBALL_FILE file."
    exit 1
  fi

  if [ ! -d "$SRDB_EXTRACT_DIR" ]; then
    mkdir $SRDB_EXTRACT_DIR
  fi
  echo "[+] Extracting tarball file ..."
  tar -xf $TARBALL_FILE -C $SRDB_EXTRACT_DIR
  if [[ $? -ne 0 ]]; then
    echo -e "${RED}[x]${NC} Error: Extraction of the tar file failed."
    exit 1
  fi
  echo -e "${GREEN}[✔]${NC} File extracted..."
}

# extract the tar file
extract_srdb_script $SRDB_TAR_FILE

# Use the `srdb` CLI script to update the link in the database within Docker with the new URL generated by Cloudflare.
if [ ! -f "$SRDB_CLI_FILE" ]; then
  echo -e "${RED}[x]${NC} Error: The srdb.cli.php file does not exist. Something went wrong during the download or extraction of the tar file."
  exit 1
fi

# Wait until MySQL is ready to accept connections
until mysqladmin ping -h mysql --silent; do
  echo "[+] Waiting for MySQL to be available..."
  sleep 5
done

# Remove the last '/' if exists from local url
local_site_url="${SRDB_SEARCH%/}"
echo -e "[+] Wait 15s please ..."
sleep 15
cloudflare_random_url=$(grep -oE 'https://[^ ]+trycloudflare\.com\b' "$DATA_DIR/tmp/tunnel_step_ready.txt")
echo -e "[+] Replacing from $local_site_url to $cloudflare_random_url ..."
php "$SRDB_CLI_FILE" -h mysql -n "$SRDB_DATABASE" -u "$SRDB_USER" -p "$SRDB_PASSWORD" -s "$local_site_url" -r "$cloudflare_random_url" > "$READY_FILE"
replace_failed=$(grep -oE 'db:' "$READY_FILE")
if [ "" != "$replace_failed" ]; then
  error_response=$(cat $READY_FILE)
  echo -e "${RED}[x]${NC} Error: $error_response"
  exit 1
fi
echo -e "${GREEN}[✔]${NC} URL replaced. Go to $cloudflare_random_url"